# Getting Started
## Prerequisites

Before we can get started, we'll need a few things:

1. *Gleam*: Statically typed functional language that compiles to Erlang. Install using the [official installation guide](https://gleam.run/getting-started/).

2. *NodeJS*: JavaScript runtime built on Chrome's V8 JavaScript engine. Install using the [official installation guide](https://nodejs.org/en/download/).

3. *Yarn*: Fast, reliable, and secure dependency management. Install using the [official
installation guide](https://yarnpkg.com/getting-started/install).

## Setup

### Method 1: Clone the starter project (Recommended)

This method is the easiest way to get started.

1. Clone the starter repository from GitHub

<.codeblock language="bash">
# Clone the starter repository from GitHub
git clone https://github.com/bitbldr/sprocket_starter.git

# Change into the project directory
cd sprocket_starter
</.codeblock>

2. Install dependencies

<.codeblock language="bash">
# Install dependencies
yarn
</.codeblock>

3. Start the server

<.codeblock language="bash">
# Start the server
yarn watch
</.codeblock>

### Method 2: Add to existing project

This method is a bit more involved and assumes you already have a Gleam project. This section is
intended to be a high-level overview of the steps involved rather than a comprehensive guide. When
in doubt, refer to the [starter repository on GitHub](https://github.com/bitbldr/sprocket_starter.git) 

1. Add Sprocket as a dependency

<.codeblock language="bash">
# Add Sprocket as a dependency in your gleam.toml
gleam add sprocket
</.codeblock>

2. Add client-side dependencies with the following commands

<.codeblock language="bash">
# Initialize a new NodeJS project, if you don't already have one
npm init -y

# Add sprocket-js as a client dependency
npm install sprocket-js
</.codeblock>

3. Sprocket needs to be initialized by the client in order to establish a persistent connection to
the server. Add the following contents to your client entrypoint file (e.g. app.js)

<.codeblock language="typescript">
import { connect } from "sprocket-js";

const hooks = {};

window.addEventListener("DOMContentLoaded", () => {
  const csrfToken = document
    .querySelector("meta[name=csrf-token]")
    ?.getAttribute("content");

  if (csrfToken) {
    let livePath =
      window.location.pathname === "/"
        ? "/live"
        : window.location.pathname.split("/").concat("live").join("/");

    connect(livePath, {
      csrfToken,
      hooks,
      // // Optionally, specify an element to mount to
      // targetEl: document.querySelector("#app") as Element,
    });
  } else {
    console.error("Missing CSRF token");
  }
});
</.codeblock>

4. Tailwind configuration is a bit involved and is out of scope for this guide. If you wish to
follow along with the same styles in this documentation, you can install tailwind by following the
instructions in the [Tailwind CSS installation guide](https://tailwindcss.com/docs/installation) and
taking a look at the configuration in the [starter repository on
GitHub](https://github.com/bitbldr/sprocket_starter.git).

That's it! Now we can begin our journey to learning how to build real-time server-side components with Sprocket!